version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: stake-games-db
    environment:
      POSTGRES_DB: stake_games
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: stake-games-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Development database admin interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: stake-games-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@stakegames.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - dev

  # Redis admin interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: stake-games-redis-ui
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: stake-games-network